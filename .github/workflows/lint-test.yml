name: Lint and Style Check
on:
  pull_request:
    paths:
      - "**.js" # Adjust the file patterns as needed

jobs:
  lint-and-style:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14 # Adjust the Node.js version
      - name: Install Dependencies
        run: npm install
      - name: ESLint and StyleLint
        run: npm run lint
      - name: Add ESLint and StyleLint comments to PR
        uses: github-actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { execSync } = require('child_process');
            const eslintOutput = execSync('npm run eslint-command', { encoding: 'utf8' });
            const stylelintOutput = execSync('npm run stylelint-command', { encoding: 'utf8' });

            const commentBody = `**ESLint Errors and Warnings:**\n\`\`\`\n${eslintOutput}\n\`\`\`\n\n**StyleLint Errors and Warnings:**\n\`\`\`\n${stylelintOutput}\n\`\`\``;

            const { data: comments } = await github.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.find(comment => comment.user.login === 'github-actions[bot]' && comment.body.includes('**ESLint Errors and Warnings:'));

            if (existingComment) {
              await github.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody,
              });
            } else {
              await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody,
              });
            }
